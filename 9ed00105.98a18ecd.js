(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),o=(n(0),n(78)),i={id:"configuration",title:"Configuration",sidebar_label:"Configuration",description:"Creating a BTCPay store and pairing a BTCPay client in Node-RED with it"},c={unversionedId:"configuration",id:"configuration",isDocsHomePage:!1,title:"Configuration",description:"Creating a BTCPay store and pairing a BTCPay client in Node-RED with it",source:"@site/docs/configuration.md",slug:"/configuration",permalink:"/docs/configuration",editUrl:"https://github.com/redbtc/redbtc.org/edit/master/docs/configuration.md",version:"current",sidebar_label:"Configuration",sidebar:"docs",previous:{title:"Installation",permalink:"/docs/"},next:{title:"Making Requests",permalink:"/docs/making-requests"}},l=[],p={rightToc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You first need to create a new BTCPay store:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Log in to your BTCPay Server instance"),Object(o.b)("li",{parentName:"ol"},"Go to Stores menu"),Object(o.b)("li",{parentName:"ol"},"Click on ",Object(o.b)("inlineCode",{parentName:"li"},"Create a new store")),Object(o.b)("li",{parentName:"ol"},"Enter a name"),Object(o.b)("li",{parentName:"ol"},"Push ",Object(o.b)("inlineCode",{parentName:"li"},"Create"))),Object(o.b)("p",null,"Now you need to pair the BTCPay client in Node-RED with the BTCPay store:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Navigate to ",Object(o.b)("inlineCode",{parentName:"li"},"Stores > Settings > Access Tokens")," on your BTCPay Server"),Object(o.b)("li",{parentName:"ol"},"Create a new token"),Object(o.b)("li",{parentName:"ol"},"Leave PublicKey blank"),Object(o.b)("li",{parentName:"ol"},"Request pairing"),Object(o.b)("li",{parentName:"ol"},"Copy pairing code"),Object(o.b)("li",{parentName:"ol"},"Open your Node-RED instance"),Object(o.b)("li",{parentName:"ol"},"Drag & drop the ",Object(o.b)("inlineCode",{parentName:"li"},"btcpay api")," node from the palette to the workspace and double-click on it, to open the node editor"),Object(o.b)("li",{parentName:"ol"},"In the ",Object(o.b)("inlineCode",{parentName:"li"},"Client")," dropdown menu pick the ",Object(o.b)("inlineCode",{parentName:"li"},"Add New btcpay-api-config")," option and press the pencil button at the right to add a new API configuration"),Object(o.b)("li",{parentName:"ol"},"Enter the https URL to your BTCPay Server instance"),Object(o.b)("li",{parentName:"ol"},"Paste the pairing code you copied on step 5"),Object(o.b)("li",{parentName:"ol"},"Click the ",Object(o.b)("inlineCode",{parentName:"li"},"Pair client")," button - the private key and token fields will be automatically filled with your api credentials"),Object(o.b)("li",{parentName:"ol"},"Push ",Object(o.b)("inlineCode",{parentName:"li"},"Update"))))}b.isMDXComponent=!0},78:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=b(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=b(n),d=r,m=u["".concat(i,".").concat(d)]||u[d]||s[d]||o;return n?a.a.createElement(m,c(c({ref:t},p),{},{components:n})):a.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);