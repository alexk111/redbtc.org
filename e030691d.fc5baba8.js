(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{112:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/telegram-notifications-fdf8ddaecfb8e425bb10ca76ff0f8f51.png"},72:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return d}));var a=t(2),o=t(6),i=(t(0),t(77)),r={id:"telegram-notifications",title:"Telegram Notifications",sidebar_label:"Telegram Notifications",hide_table_of_contents:!0},s={unversionedId:"integrations/telegram-notifications",id:"integrations/telegram-notifications",isDocsHomePage:!1,title:"Telegram Notifications",description:"This flow will send you notifications about paid invoices using a Telegram bot.",source:"@site/flows/integrations/telegram-notifications.md",slug:"/integrations/telegram-notifications",permalink:"/flows/integrations/telegram-notifications",editUrl:"https://github.com/alexk111/redbtc.org/edit/master/flows/integrations/telegram-notifications.md",version:"current",lastUpdatedBy:"Alex Kaul",lastUpdatedAt:1600185186,sidebar_label:"Telegram Notifications",sidebar:"flows",previous:{title:"Handling Instant Payment Notifications",permalink:"/flows/starters/ipn-handler"},next:{title:"Telegram Gatekeeper",permalink:"/flows/applications/telegram-gatekeeper"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Configuration &amp; Setup",id:"configuration--setup",children:[]},{value:"Node-RED Flow",id:"node-red-flow",children:[]}],l={rightToc:c};function d(e){var n=e.components,r=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,r,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This flow will send you notifications about paid invoices using a Telegram bot."),Object(i.b)("p",null,Object(i.b)("img",{alt:"Telegram Notifications Flow",src:t(112).default})),Object(i.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(i.b)("p",null,"This flow requires the following node to be installed on your Node-RED:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/windkh/node-red-contrib-telegrambot"}),"node-red-contrib-telegrambot"))),Object(i.b)("h2",{id:"configuration--setup"},"Configuration & Setup"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Import the Node-RED Flow"),Object(i.b)("li",{parentName:"ol"},'In the "IPN Handler" section of the flow double-click the initial node and specify URL for receiving POST notifications from BTCPay Server'),Object(i.b)("li",{parentName:"ol"},"Now add the notification URL to Node-RED flows and/or other servers creating invoices for you. Calls to BTCPay's Create Invoice API should have the ",Object(i.b)("inlineCode",{parentName:"li"},"notificationUrl")," property with the URL you specified in the previous step"),Object(i.b)("li",{parentName:"ol"},'Open the "Configuration nodes" panel in Node-RED (via tabs on the right panel or ',Object(i.b)("inlineCode",{parentName:"li"},"ctrl-g c")," shortcut) and configure the config-nodes:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"btcpay-api-config")," - create a store on your BTCPay Server and pair the node with it (",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://redbtc.org/docs/configuration/"}),"read more"),")"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"telegram bot")," - ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://core.telegram.org/bots#6-botfather"}),"create a Telegram bot")," and copy/paste the token into the config-node"))),Object(i.b)("li",{parentName:"ol"},"Push ",Object(i.b)("inlineCode",{parentName:"li"},"Deploy")),Object(i.b)("li",{parentName:"ol"},"Open chat with your Bot and send ",Object(i.b)("inlineCode",{parentName:"li"},"/tellmyid")," command"),Object(i.b)("li",{parentName:"ol"},"Copy your id"),Object(i.b)("li",{parentName:"ol"},'Double-click the "\ud83d\udd28 TG data" node and paste your id into ',Object(i.b)("inlineCode",{parentName:"li"},"msg.payload.chatId")," property"),Object(i.b)("li",{parentName:"ol"},"Push ",Object(i.b)("inlineCode",{parentName:"li"},"Deploy")),Object(i.b)("li",{parentName:"ol"},'Done! Now the bot will send you notifications about paid invoices. You might edit the notification template in the "msgText = Invoice Paid" node.')),Object(i.b)("h2",{id:"node-red-flow"},"Node-RED Flow"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "82d06f0.9fd349",\n    "type": "template",\n    "z": "ee9c9c24.20b96",\n    "name": "msgText = Invoice Paid",\n    "field": "msgText",\n    "fieldType": "msg",\n    "format": "handlebars",\n    "syntax": "mustache",\n    "template": "\u26a1 Invoice has been paid \u26a1\\n\\nID: <b>{{payload.id}}</b>\\nPrice: <b>{{payload.price}}</b>\\nCurrency: <b>{{payload.currency}}</b>",\n    "output": "str",\n    "x": 1030,\n    "y": 440,\n    "wires": [["180d7108.a3e0cf"]]\n  },\n  {\n    "id": "eb5cc73f.92dc38",\n    "type": "http in",\n    "z": "ee9c9c24.20b96",\n    "name": "",\n    "url": "/btcpay-ipn/",\n    "method": "post",\n    "upload": false,\n    "swaggerDoc": "",\n    "x": 210,\n    "y": 400,\n    "wires": [["2b99d4ed.5ea19c"]]\n  },\n  {\n    "id": "b68020ac.2ca1d",\n    "type": "http response",\n    "z": "ee9c9c24.20b96",\n    "name": "http response = ok",\n    "statusCode": "",\n    "headers": {},\n    "x": 730,\n    "y": 400,\n    "wires": []\n  },\n  {\n    "id": "2b99d4ed.5ea19c",\n    "type": "change",\n    "z": "ee9c9c24.20b96",\n    "name": "Prepare data for API",\n    "rules": [\n      {\n        "t": "set",\n        "p": "path",\n        "pt": "msg",\n        "to": "\\"/invoices/\\" & payload.id",\n        "tot": "jsonata"\n      },\n      { "t": "delete", "p": "payload", "pt": "msg" }\n    ],\n    "action": "",\n    "property": "",\n    "from": "",\n    "to": "",\n    "reg": false,\n    "x": 460,\n    "y": 400,\n    "wires": [["384d3d4b.70c1d2"]]\n  },\n  {\n    "id": "384d3d4b.70c1d2",\n    "type": "btcpay-api",\n    "z": "ee9c9c24.20b96",\n    "method": "GET",\n    "path": "",\n    "client": "9711e4a7.bae348",\n    "name": "Fetch Invoice",\n    "x": 490,\n    "y": 440,\n    "wires": [["b68020ac.2ca1d", "b6414d4b.7518c"]]\n  },\n  {\n    "id": "b6414d4b.7518c",\n    "type": "switch",\n    "z": "ee9c9c24.20b96",\n    "name": "check status",\n    "property": "payload.status",\n    "propertyType": "msg",\n    "rules": [\n      { "t": "eq", "v": "confirmed", "vt": "str" },\n      { "t": "eq", "v": "complete", "vt": "str" }\n    ],\n    "checkall": "false",\n    "repair": false,\n    "outputs": 2,\n    "x": 750,\n    "y": 440,\n    "wires": [["82d06f0.9fd349"], ["82d06f0.9fd349"]]\n  },\n  {\n    "id": "34bd34b.0a831cc",\n    "type": "comment",\n    "z": "ee9c9c24.20b96",\n    "name": "IPN Handler",\n    "info": "",\n    "x": 190,\n    "y": 320,\n    "wires": []\n  },\n  {\n    "id": "9d2463f2.8e9d6",\n    "type": "telegram sender",\n    "z": "ee9c9c24.20b96",\n    "name": "",\n    "bot": "ac4e405.e7abcc",\n    "x": 1490,\n    "y": 580,\n    "wires": [[]]\n  },\n  {\n    "id": "180d7108.a3e0cf",\n    "type": "change",\n    "z": "ee9c9c24.20b96",\n    "name": "\ud83d\udd28 TG data",\n    "rules": [\n      { "t": "delete", "p": "payload", "pt": "msg" },\n      {\n        "t": "set",\n        "p": "payload.chatId",\n        "pt": "msg",\n        "to": "",\n        "tot": "num"\n      },\n      {\n        "t": "set",\n        "p": "payload.type",\n        "pt": "msg",\n        "to": "message",\n        "tot": "str"\n      },\n      {\n        "t": "set",\n        "p": "payload.options.parse_mode",\n        "pt": "msg",\n        "to": "HTML",\n        "tot": "str"\n      },\n      {\n        "t": "set",\n        "p": "payload.content",\n        "pt": "msg",\n        "to": "msgText",\n        "tot": "msg"\n      }\n    ],\n    "action": "",\n    "property": "",\n    "from": "",\n    "to": "",\n    "reg": false,\n    "x": 1270,\n    "y": 440,\n    "wires": [["9d2463f2.8e9d6"]]\n  },\n  {\n    "id": "fc8145ba.866768",\n    "type": "telegram command",\n    "z": "ee9c9c24.20b96",\n    "name": "",\n    "command": "/tellmyid",\n    "bot": "ac4e405.e7abcc",\n    "strict": false,\n    "hasresponse": false,\n    "x": 740,\n    "y": 740,\n    "wires": [["2683c44e.4967cc"], []]\n  },\n  {\n    "id": "2683c44e.4967cc",\n    "type": "template",\n    "z": "ee9c9c24.20b96",\n    "name": "content = Your Id is ...",\n    "field": "payload.content",\n    "fieldType": "msg",\n    "format": "handlebars",\n    "syntax": "mustache",\n    "template": "Your id: <b>{{originalMessage.from.id}}</b>\\n",\n    "output": "str",\n    "x": 960,\n    "y": 740,\n    "wires": [["2302248b.f13e6c"]]\n  },\n  {\n    "id": "2302248b.f13e6c",\n    "type": "change",\n    "z": "ee9c9c24.20b96",\n    "name": "set HTML parse mode",\n    "rules": [\n      {\n        "t": "set",\n        "p": "payload.options.parse_mode",\n        "pt": "msg",\n        "to": "HTML",\n        "tot": "str"\n      }\n    ],\n    "action": "",\n    "property": "",\n    "from": "",\n    "to": "",\n    "reg": false,\n    "x": 1240,\n    "y": 740,\n    "wires": [["9d2463f2.8e9d6"]]\n  },\n  {\n    "id": "a40977e2.b39058",\n    "type": "comment",\n    "z": "ee9c9c24.20b96",\n    "name": "Helper to get Chat Id",\n    "info": "",\n    "x": 770,\n    "y": 660,\n    "wires": []\n  },\n  { "id": "9711e4a7.bae348", "type": "btcpay-api-config", "z": "", "name": "" },\n  {\n    "id": "ac4e405.e7abcc",\n    "type": "telegram bot",\n    "z": "",\n    "botname": "Gatekeeper bot",\n    "usernames": "",\n    "chatids": "",\n    "baseapiurl": "",\n    "updatemode": "polling",\n    "pollinterval": "300",\n    "usesocks": false,\n    "sockshost": "",\n    "socksport": "6667",\n    "socksusername": "anonymous",\n    "sockspassword": "",\n    "bothost": "",\n    "localbotport": "8443",\n    "publicbotport": "8443",\n    "privatekey": "",\n    "certificate": "",\n    "useselfsignedcertificate": false,\n    "sslterminated": false,\n    "verboselogging": false\n  }\n]\n')))}d.isMDXComponent=!0}}]);