(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{113:function(n,e,t){"use strict";t.r(e),e.default=t.p+"assets/images/telegram-gatekeeper-ce30b44b4f21cb05e8934c30349b785e.png"},63:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return i})),t.d(e,"metadata",(function(){return o})),t.d(e,"rightToc",(function(){return s})),t.d(e,"default",(function(){return l}));var a=t(2),r=t(6),c=(t(0),t(78)),i={id:"telegram-gatekeeper",title:"Telegram Gatekeeper",sidebar_label:"Telegram Gatekeeper",hide_table_of_contents:!0,image:"/img/og-images/btcpay-telegram.png"},o={unversionedId:"applications/telegram-gatekeeper",id:"applications/telegram-gatekeeper",isDocsHomePage:!1,title:"Telegram Gatekeeper",description:"This flow creates a Telegram Gatekeeper bot which lets the user join a channel/group in Telegram, only after making a Bitcoin payment for it.",source:"@site/flows/applications/telegram-gatekeeper.md",slug:"/applications/telegram-gatekeeper",permalink:"/flows/applications/telegram-gatekeeper",editUrl:"https://github.com/redbtc/redbtc.org/edit/master/flows/applications/telegram-gatekeeper.md",version:"current",lastUpdatedBy:"Alex Kaul",lastUpdatedAt:1601477139,sidebar_label:"Telegram Gatekeeper",sidebar:"flows",previous:{title:"Kraken Exchange",permalink:"/flows/integrations/kraken-exchange"},next:{title:"GitHub Donations",permalink:"/flows/applications/github-donations"}},s=[{value:"Process",id:"process",children:[]},{value:"Technical Notes",id:"technical-notes",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Configuration &amp; Setup",id:"configuration--setup",children:[]},{value:"Node-RED Flow",id:"node-red-flow",children:[]}],p={rightToc:s};function l(n){var e=n.components,i=Object(r.a)(n,["components"]);return Object(c.b)("wrapper",Object(a.a)({},p,i,{components:e,mdxType:"MDXLayout"}),Object(c.b)("p",null,"This flow creates a Telegram Gatekeeper bot which lets the user join a channel/group in Telegram, only after making a Bitcoin payment for it."),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Note"),": The invite link to channel/group can be replaced with any other link."),Object(c.b)("p",null,Object(c.b)("img",{alt:"Telegram Gatekeeper Flow",src:t(113).default})),Object(c.b)("h2",{id:"process"},"Process"),Object(c.b)("p",null,"Here is how the process looks:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Bot welcomes the user and offers to buy access to a channel/group"),Object(c.b)("li",{parentName:"ol"},'User presses "Buy" button'),Object(c.b)("li",{parentName:"ol"},'Bot sends an invoice message with "Make Payment" and "Expired? Refresh" buttons'),Object(c.b)("li",{parentName:"ol"},'When User presses "Make Payment" button, a BTCPay invoice opens in the web browser. When User presses "Expired? Refresh" button, a new invoice will be created (if it\'s really expired).'),Object(c.b)("li",{parentName:"ol"},'After User completes the payment, Bot sends a "Thank You" message with "Get Access" button'),Object(c.b)("li",{parentName:"ol"},"User presses the button"),Object(c.b)("li",{parentName:"ol"},'Bot sends "Access Granted" alert and message'),Object(c.b)("li",{parentName:"ol"},'User presees "Join Channel" button and the channel opens in Telegram')),Object(c.b)("h2",{id:"technical-notes"},"Technical Notes"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"To keep the chat clean, Bot edits the same message User pushes buttons in, instead of sending new messages on each event."),Object(c.b)("li",{parentName:"ul"},'When User completes the payment, Bot deletes the "invoice" message and sends the "thank you" message instead of editing. This triggers "New Message" notification in Telegram to move User\'s attention from Browser to Telegram.'),Object(c.b)("li",{parentName:"ul"},"To prevent excessive generation of invoices on BTCPay Server, Bot stores ids of User's invoices, checks the status of the last one and generates a new invoice only if it has expired.")),Object(c.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(c.b)("p",null,"This flow requires the following nodes to be installed on your Node-RED:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://flows.nodered.org/node/node-red-node-sqlite"}),"node-red-node-sqlite")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/windkh/node-red-contrib-telegrambot"}),"node-red-contrib-telegrambot"))),Object(c.b)("h2",{id:"configuration--setup"},"Configuration & Setup"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},'Import the Node-RED Flow - it will add a new tab called "TG - Gatekeeper"'),Object(c.b)("li",{parentName:"ol"},'In the "IPN Handler" section (bottom-left corner) of the tab double-click the initial node and specify URL for receiving POST notifications from BTCPay Server'),Object(c.b)("li",{parentName:"ol"},'Open the "Configuration nodes" panel in Node-RED (via tabs on the right panel or ',Object(c.b)("inlineCode",{parentName:"li"},"ctrl-g c")," shortcut) and configure the config-nodes:",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"btcpay-api-config")," - create a store on your BTCPay Server and pair the node with it (",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://redbtc.org/docs/configuration/"}),"read more"),")"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"sqlitedb")," - set a path to a SQLite DB file where the app will store the data"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"telegram bot")," - ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://core.telegram.org/bots#6-botfather"}),"create a Telegram bot")," and copy/paste the token into the config-node"))),Object(c.b)("li",{parentName:"ol"},'In the "App Configuration & Setup" section (top-left corner) of the flow double-click the "\ud83d\udd28 App Settings" node and enter your data:',Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"price")," & ",Object(c.b)("strong",{parentName:"li"},"currency")," - price and currency (used to create invoices on BTCPay Server)"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"tgInviteLink")," - invite link to a telegram group/channel User gets after the purchase"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"webhookUrl")," - URL the IPN handler is running on"))),Object(c.b)("li",{parentName:"ol"},"Push ",Object(c.b)("inlineCode",{parentName:"li"},"Deploy")),Object(c.b)("li",{parentName:"ol"},'In the "App Configuration & Setup" section (top-left corner) of the flow click the injector buttons of "Auto-exec on startup" and "Setup App" nodes'),Object(c.b)("li",{parentName:"ol"},"Done! Test the bot and implement your changes :)")),Object(c.b)("h2",{id:"node-red-flow"},"Node-RED Flow"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),'[\n    {\n        "id": "b1c965cf.c2bff8",\n        "type": "tab",\n        "label": "TG - Gatekeeper",\n        "disabled": false,\n        "info": ""\n    },\n    {\n        "id": "4e9602ab.ac034c",\n        "type": "sqlite",\n        "z": "b1c965cf.c2bff8",\n        "mydb": "d0934ac4.e0be88",\n        "sqlquery": "batch",\n        "sql": "",\n        "name": "Exec query",\n        "x": 570,\n        "y": 260,\n        "wires": [\n            []\n        ]\n    },\n    {\n        "id": "836d26f8.e10f18",\n        "type": "template",\n        "z": "b1c965cf.c2bff8",\n        "name": "SQL Query = Setup Tables",\n        "field": "topic",\n        "fieldType": "msg",\n        "format": "sql",\n        "syntax": "plain",\n        "template": "CREATE TABLE IF NOT EXISTS users_invoices (\\n    invoice_id TEXT PRIMARY KEY, /* btcpay invoice id */\\n    user_id INTEGER NOT NULL, /* telegram user id */\\n    msg_id INTEGER NOT NULL, /* id of telegram msg with the invoice */\\n    created_at INTEGER NOT NULL, /* creation timestamp */\\n    paid INTEGER NOT NULL /* 0 - not paid; 1 - paid */\\n);\\n\\nCREATE INDEX IF NOT EXISTS idx_users_invoices_user_created\\n    ON users_invoices (user_id, created_at);\\n\\nCREATE INDEX IF NOT EXISTS idx_users_invoices_user_paid\\n    ON users_invoices (user_id, paid);\\n",\n        "output": "str",\n        "x": 520,\n        "y": 220,\n        "wires": [\n            [\n                "4e9602ab.ac034c"\n            ]\n        ]\n    },\n    {\n        "id": "5ce0b722.db0a98",\n        "type": "inject",\n        "z": "b1c965cf.c2bff8",\n        "name": "Setup App",\n        "props": [\n            {\n                "p": "payload"\n            },\n            {\n                "p": "topic",\n                "vt": "str"\n            }\n        ],\n        "repeat": "",\n        "crontab": "",\n        "once": false,\n        "onceDelay": 0.1,\n        "topic": "",\n        "payload": "",\n        "payloadType": "date",\n        "x": 200,\n        "y": 220,\n        "wires": [\n            [\n                "836d26f8.e10f18"\n            ]\n        ]\n    },\n    {\n        "id": "1cfb6187.d043ae",\n        "type": "inject",\n        "z": "b1c965cf.c2bff8",\n        "name": "Auto-exec on startup",\n        "props": [\n            {\n                "p": "payload"\n            },\n            {\n                "p": "topic",\n                "vt": "str"\n            }\n        ],\n        "repeat": "",\n        "crontab": "",\n        "once": true,\n        "onceDelay": "0",\n        "topic": "",\n        "payload": "",\n        "payloadType": "date",\n        "x": 240,\n        "y": 180,\n        "wires": [\n            [\n                "dcc49b39.e21688"\n            ]\n        ]\n    },\n    {\n        "id": "dcc49b39.e21688",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "\ud83d\udd28 App Settings",\n        "rules": [\n            {\n                "t": "set",\n                "p": "price",\n                "pt": "flow",\n                "to": "0.01",\n                "tot": "num"\n            },\n            {\n                "t": "set",\n                "p": "currency",\n                "pt": "flow",\n                "to": "BTC",\n                "tot": "str"\n            },\n            {\n                "t": "set",\n                "p": "tgInviteLink",\n                "pt": "flow",\n                "to": "https://t.me/joinchat/AAAAA",\n                "tot": "str"\n            },\n            {\n                "t": "set",\n                "p": "webhookUrl",\n                "pt": "flow",\n                "to": "https://nodered.yoursite.com/btcpay-ipn/",\n                "tot": "str"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 480,\n        "y": 180,\n        "wires": [\n            []\n        ]\n    },\n    {\n        "id": "c0ee9e01.e11a8",\n        "type": "telegram sender",\n        "z": "b1c965cf.c2bff8",\n        "name": "",\n        "bot": "ac4e405.e7abcc",\n        "x": 2410,\n        "y": 660,\n        "wires": [\n            []\n        ]\n    },\n    {\n        "id": "37eaa8dc.1efc68",\n        "type": "function",\n        "z": "b1c965cf.c2bff8",\n        "name": "keyboard = Buy",\n        "func": "var opts = {\\n  reply_markup: JSON.stringify({\\n    \\"inline_keyboard\\": [\\n        [\\n            {\\n                \\"text\\": \\"Yes, buy with Bitcoin\\",\\n                \\"callback_data\\": \\"Buy\\"            \\n            }\\n        ]\\n    ]\\n  })\\n};\\nmsg.payload.options = opts;\\n\\nreturn msg;\\n",\n        "outputs": "1",\n        "noerr": 0,\n        "initialize": "",\n        "finalize": "",\n        "x": 500,\n        "y": 600,\n        "wires": [\n            [\n                "3439eede.bcfc52"\n            ]\n        ]\n    },\n    {\n        "id": "234aa9e9.79cc26",\n        "type": "function",\n        "z": "b1c965cf.c2bff8",\n        "name": "keyboard = invoice link",\n        "func": "const reply_markup = JSON.stringify({\\n    \\"inline_keyboard\\": [\\n        [\\n            {\\n                \\"text\\": \\"Make Payment\\",\\n                \\"url\\": msg.btcpayPayload.url\\n            }, \\n            {\\n                \\"text\\": \\"Expired? Refresh\\",\\n                \\"callback_data\\": \\"RefreshExpired\\"\\n            }\\n        ]\\n    ]\\n});\\n\\nmsg.payload.type = \'editMessageText\';\\nmsg.payload.options = {\\n    chat_id: msg.payload.chatId,\\n    reply_markup: reply_markup,\\n    message_id: msg.originalMessage.message.message_id\\n};\\n\\nreturn msg;\\n",\n        "outputs": "1",\n        "noerr": 0,\n        "initialize": "",\n        "finalize": "",\n        "x": 2440,\n        "y": 1020,\n        "wires": [\n            [\n                "dac5fe08.32d83"\n            ]\n        ]\n    },\n    {\n        "id": "2f4dfc78.aca034",\n        "type": "function",\n        "z": "b1c965cf.c2bff8",\n        "name": "send as alert",\n        "func": "msg.payload.options = false;\\n\\nreturn msg;\\n",\n        "outputs": "1",\n        "noerr": 0,\n        "initialize": "",\n        "finalize": "",\n        "x": 730,\n        "y": 1140,\n        "wires": [\n            [\n                "b8334051.0e467"\n            ]\n        ]\n    },\n    {\n        "id": "df06b5a6.24c5a8",\n        "type": "function",\n        "z": "b1c965cf.c2bff8",\n        "name": "keyboard = Join Channel",\n        "func": "const reply_markup = JSON.stringify({\\n    \\"inline_keyboard\\": [\\n        [\\n            {\\n                \\"text\\": \\"Join Channel\\",\\n                \\"url\\": flow.get(\\"tgInviteLink\\")\\n            }\\n        ]\\n    ]\\n});\\n\\n\\nmsg.payload.type = \'editMessageText\';\\nmsg.payload.options = {\\n    chat_id: msg.payload.chatId,\\n    reply_markup: reply_markup,\\n    message_id: msg.originalMessage.message.message_id\\n};\\n\\nreturn [ msg ];\\n",\n        "outputs": "1",\n        "noerr": 0,\n        "initialize": "",\n        "finalize": "",\n        "x": 730,\n        "y": 1260,\n        "wires": [\n            [\n                "b8334051.0e467"\n            ]\n        ]\n    },\n    {\n        "id": "ad3a06bb.3534e8",\n        "type": "template",\n        "z": "b1c965cf.c2bff8",\n        "name": "content = Wanna buy?",\n        "field": "payload.content",\n        "fieldType": "msg",\n        "format": "handlebars",\n        "syntax": "mustache",\n        "template": "Access to <b>XChan</b> costs <b>{{flow.price}}</b> {{flow.currency}}.\\n\\nWant to buy it?",\n        "output": "str",\n        "x": 480,\n        "y": 560,\n        "wires": [\n            [\n                "37eaa8dc.1efc68"\n            ]\n        ]\n    },\n    {\n        "id": "940f11cc.d328b",\n        "type": "template",\n        "z": "b1c965cf.c2bff8",\n        "name": "content = Invoice",\n        "field": "payload.content",\n        "fieldType": "msg",\n        "format": "handlebars",\n        "syntax": "mustache",\n        "template": "\u26a1\u26a1\u26a1 Here is your invoice \u26a1\u26a1\u26a1\\n\\n<b>Note:</b> it expires after 15 mins.",\n        "output": "str",\n        "x": 2430,\n        "y": 980,\n        "wires": [\n            [\n                "234aa9e9.79cc26"\n            ]\n        ]\n    },\n    {\n        "id": "af6af72d.108ec8",\n        "type": "template",\n        "z": "b1c965cf.c2bff8",\n        "name": "content = Access Granted",\n        "field": "payload.content",\n        "fieldType": "msg",\n        "format": "handlebars",\n        "syntax": "mustache",\n        "template": "\ud83d\udd13 Access Granted \ud83d\udd13",\n        "output": "str",\n        "x": 690,\n        "y": 1100,\n        "wires": [\n            [\n                "2f4dfc78.aca034"\n            ]\n        ]\n    },\n    {\n        "id": "4ab0dce4.5f9e54",\n        "type": "template",\n        "z": "b1c965cf.c2bff8",\n        "name": "content = Access Granted - Join",\n        "field": "payload.content",\n        "fieldType": "msg",\n        "format": "handlebars",\n        "syntax": "mustache",\n        "template": "\ud83d\udd13 Access Granted \ud83d\udd13\\n\\nNow you can join the channel.",\n        "output": "str",\n        "x": 710,\n        "y": 1220,\n        "wires": [\n            [\n                "df06b5a6.24c5a8"\n            ]\n        ]\n    },\n    {\n        "id": "1efdd5f7.301baa",\n        "type": "switch",\n        "z": "b1c965cf.c2bff8",\n        "name": "Which callback?",\n        "property": "msg.payload.content",\n        "propertyType": "msg",\n        "rules": [\n            {\n                "t": "eq",\n                "v": "Buy",\n                "vt": "str"\n            },\n            {\n                "t": "eq",\n                "v": "RefreshExpired",\n                "vt": "str"\n            },\n            {\n                "t": "eq",\n                "v": "GetAccess",\n                "vt": "str"\n            }\n        ],\n        "checkall": "false",\n        "repair": false,\n        "outputs": 3,\n        "x": 420,\n        "y": 1060,\n        "wires": [\n            [\n                "6bbc5a46.e09b74"\n            ],\n            [\n                "6bbc5a46.e09b74"\n            ],\n            [\n                "af6af72d.108ec8",\n                "4ab0dce4.5f9e54"\n            ]\n        ]\n    },\n    {\n        "id": "a67cffe4.bd3ca",\n        "type": "telegram command",\n        "z": "b1c965cf.c2bff8",\n        "name": "",\n        "command": "/start",\n        "bot": "ac4e405.e7abcc",\n        "strict": false,\n        "hasresponse": false,\n        "x": 190,\n        "y": 580,\n        "wires": [\n            [\n                "ad3a06bb.3534e8"\n            ]\n        ]\n    },\n    {\n        "id": "116e6754.ccb3e9",\n        "type": "telegram event",\n        "z": "b1c965cf.c2bff8",\n        "name": "",\n        "bot": "ac4e405.e7abcc",\n        "event": "callback_query",\n        "autoanswer": true,\n        "x": 220,\n        "y": 1060,\n        "wires": [\n            [\n                "1efdd5f7.301baa"\n            ]\n        ]\n    },\n    {\n        "id": "f3a04c89.717f1",\n        "type": "btcpay-api",\n        "z": "b1c965cf.c2bff8",\n        "method": "POST",\n        "path": "/invoices",\n        "client": "9711e4a7.bae348",\n        "name": "Create Invoice",\n        "x": 1800,\n        "y": 1060,\n        "wires": [\n            [\n                "5a08a622.fe2448"\n            ]\n        ]\n    },\n    {\n        "id": "8b0edd5.f4bdb2",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "API data",\n        "rules": [\n            {\n                "t": "delete",\n                "p": "payload",\n                "pt": "msg"\n            },\n            {\n                "t": "set",\n                "p": "payload.price",\n                "pt": "msg",\n                "to": "price",\n                "tot": "flow"\n            },\n            {\n                "t": "set",\n                "p": "payload.currency",\n                "pt": "msg",\n                "to": "currency",\n                "tot": "flow"\n            },\n            {\n                "t": "set",\n                "p": "payload.notificationURL",\n                "pt": "msg",\n                "to": "webhookUrl",\n                "tot": "flow"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 1780,\n        "y": 1020,\n        "wires": [\n            [\n                "f3a04c89.717f1"\n            ]\n        ]\n    },\n    {\n        "id": "c5c6cc7d.e65a8",\n        "type": "sqlite",\n        "z": "b1c965cf.c2bff8",\n        "mydb": "d0934ac4.e0be88",\n        "sqlquery": "prepared",\n        "sql": "SELECT * FROM users_invoices WHERE user_id = $uid ORDER BY created_at LIMIT 1;",\n        "name": "Get last invoice id for user",\n        "x": 970,\n        "y": 940,\n        "wires": [\n            [\n                "4ba3194.94332e8"\n            ]\n        ]\n    },\n    {\n        "id": "4ba3194.94332e8",\n        "type": "switch",\n        "z": "b1c965cf.c2bff8",\n        "name": "Has invoice id?",\n        "property": "payload",\n        "propertyType": "msg",\n        "rules": [\n            {\n                "t": "nempty"\n            },\n            {\n                "t": "else"\n            }\n        ],\n        "checkall": "false",\n        "repair": false,\n        "outputs": 2,\n        "x": 1240,\n        "y": 920,\n        "wires": [\n            [\n                "b9a9e202.f12f7"\n            ],\n            [\n                "8b0edd5.f4bdb2"\n            ]\n        ],\n        "outputLabels": [\n            "Yes",\n            "No"\n        ]\n    },\n    {\n        "id": "5704a92d.996448",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "Prepare data",\n        "rules": [\n            {\n                "t": "set",\n                "p": "params.$uid",\n                "pt": "msg",\n                "to": "tgPayload.from.id",\n                "tot": "msg"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 930,\n        "y": 900,\n        "wires": [\n            [\n                "c5c6cc7d.e65a8"\n            ]\n        ]\n    },\n    {\n        "id": "a3343be1.71e0e8",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "Prepare data",\n        "rules": [\n            {\n                "t": "delete",\n                "p": "params",\n                "pt": "msg"\n            },\n            {\n                "t": "set",\n                "p": "params.$iid",\n                "pt": "msg",\n                "to": "btcpayPayload.id",\n                "tot": "msg"\n            },\n            {\n                "t": "set",\n                "p": "params.$uid",\n                "pt": "msg",\n                "to": "originalMessage.from.id",\n                "tot": "msg"\n            },\n            {\n                "t": "set",\n                "p": "params.$mid",\n                "pt": "msg",\n                "to": "originalMessage.message.message_id",\n                "tot": "msg"\n            },\n            {\n                "t": "set",\n                "p": "params.$time",\n                "pt": "msg",\n                "to": "",\n                "tot": "date"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 2070,\n        "y": 1060,\n        "wires": [\n            [\n                "ebae6e3f.515f1"\n            ]\n        ]\n    },\n    {\n        "id": "ebae6e3f.515f1",\n        "type": "sqlite",\n        "z": "b1c965cf.c2bff8",\n        "mydb": "d0934ac4.e0be88",\n        "sqlquery": "prepared",\n        "sql": "INSERT INTO users_invoices(invoice_id, user_id, msg_id, created_at, paid)\\n       VALUES($iid, $uid, $mid, $time, 0);",\n        "name": "Save user-invoice",\n        "x": 2090,\n        "y": 1100,\n        "wires": [\n            [\n                "abdce8c.4187718"\n            ]\n        ]\n    },\n    {\n        "id": "6bbc5a46.e09b74",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "payload -> tgPayload",\n        "rules": [\n            {\n                "t": "move",\n                "p": "payload",\n                "pt": "msg",\n                "to": "tgPayload",\n                "tot": "msg"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 680,\n        "y": 920,\n        "wires": [\n            [\n                "5704a92d.996448"\n            ]\n        ]\n    },\n    {\n        "id": "d34088a6.d2b908",\n        "type": "btcpay-api",\n        "z": "b1c965cf.c2bff8",\n        "method": "GET",\n        "path": "",\n        "client": "9711e4a7.bae348",\n        "name": "Get Invoice Data",\n        "x": 1530,\n        "y": 840,\n        "wires": [\n            [\n                "5e988c69.850e94"\n            ]\n        ]\n    },\n    {\n        "id": "b9a9e202.f12f7",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "API data",\n        "rules": [\n            {\n                "t": "set",\n                "p": "path",\n                "pt": "msg",\n                "to": "\\"/invoices/\\" & payload[0].invoice_id",\n                "tot": "jsonata"\n            },\n            {\n                "t": "delete",\n                "p": "payload",\n                "pt": "msg"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 1500,\n        "y": 800,\n        "wires": [\n            [\n                "d34088a6.d2b908"\n            ]\n        ]\n    },\n    {\n        "id": "5e988c69.850e94",\n        "type": "switch",\n        "z": "b1c965cf.c2bff8",\n        "name": "Got Invoice data?",\n        "property": "payload",\n        "propertyType": "msg",\n        "rules": [\n            {\n                "t": "hask",\n                "v": "status",\n                "vt": "str"\n            },\n            {\n                "t": "else"\n            }\n        ],\n        "checkall": "false",\n        "repair": false,\n        "outputs": 2,\n        "x": 1530,\n        "y": 920,\n        "wires": [\n            [\n                "e0448a0f.0aeb48"\n            ],\n            [\n                "8b0edd5.f4bdb2"\n            ]\n        ],\n        "outputLabels": [\n            "Yes",\n            "No"\n        ]\n    },\n    {\n        "id": "e0448a0f.0aeb48",\n        "type": "switch",\n        "z": "b1c965cf.c2bff8",\n        "name": "Expired?",\n        "property": "payload.status",\n        "propertyType": "msg",\n        "rules": [\n            {\n                "t": "neq",\n                "v": "expired",\n                "vt": "str"\n            },\n            {\n                "t": "else"\n            }\n        ],\n        "checkall": "false",\n        "repair": false,\n        "outputs": 2,\n        "x": 1780,\n        "y": 880,\n        "wires": [\n            [\n                "8b9459b6.b69e48"\n            ],\n            [\n                "8b0edd5.f4bdb2"\n            ]\n        ],\n        "outputLabels": [\n            "No",\n            "Yes"\n        ]\n    },\n    {\n        "id": "be5fc001.48d2a",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "Prepare data",\n        "rules": [\n            {\n                "t": "delete",\n                "p": "params",\n                "pt": "msg"\n            },\n            {\n                "t": "set",\n                "p": "params.$iid",\n                "pt": "msg",\n                "to": "btcpayPayload.id",\n                "tot": "msg"\n            },\n            {\n                "t": "set",\n                "p": "params.$mid",\n                "pt": "msg",\n                "to": "originalMessage.message.message_id",\n                "tot": "msg"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 2050,\n        "y": 860,\n        "wires": [\n            [\n                "1c9c9885.f35eb7"\n            ]\n        ]\n    },\n    {\n        "id": "1c9c9885.f35eb7",\n        "type": "sqlite",\n        "z": "b1c965cf.c2bff8",\n        "mydb": "d0934ac4.e0be88",\n        "sqlquery": "prepared",\n        "sql": "UPDATE users_invoices SET msg_id = $mid WHERE invoice_id = $iid;",\n        "name": "Update msg id for user-invoice",\n        "x": 2090,\n        "y": 900,\n        "wires": [\n            [\n                "abdce8c.4187718"\n            ]\n        ]\n    },\n    {\n        "id": "c25fc6c1.773e78",\n        "type": "link in",\n        "z": "b1c965cf.c2bff8",\n        "name": "",\n        "links": [\n            "2716b7a1.b41af8",\n            "ede2a7eb.034408",\n            "b8334051.0e467"\n        ],\n        "x": 2135,\n        "y": 660,\n        "wires": [\n            [\n                "c0ee9e01.e11a8"\n            ]\n        ]\n    },\n    {\n        "id": "dac5fe08.32d83",\n        "type": "link out",\n        "z": "b1c965cf.c2bff8",\n        "name": "",\n        "links": [\n            "72f1d607.6dbf08"\n        ],\n        "x": 2655,\n        "y": 1000,\n        "wires": []\n    },\n    {\n        "id": "ede2a7eb.034408",\n        "type": "link out",\n        "z": "b1c965cf.c2bff8",\n        "name": "",\n        "links": [\n            "c25fc6c1.773e78"\n        ],\n        "x": 1955,\n        "y": 1360,\n        "wires": []\n    },\n    {\n        "id": "a91187c.6223478",\n        "type": "function",\n        "z": "b1c965cf.c2bff8",\n        "name": "keyboard = Get Access",\n        "func": "const reply_markup = JSON.stringify({\\n    \\"inline_keyboard\\": [\\n        [\\n            {\\n                \\"text\\": \\"Get Access\\",\\n                \\"callback_data\\": \\"GetAccess\\"            \\n            }\\n        ]\\n    ]\\n});\\n\\nmsg.payload = {\\n    chatId: msg.payload[0].user_id,\\n    type: \\"message\\",\\n    options: {\\n        reply_markup : reply_markup\\n    }\\n}\\n\\nreturn msg;\\n\\n",\n        "outputs": "1",\n        "noerr": 0,\n        "initialize": "",\n        "finalize": "",\n        "x": 1710,\n        "y": 1420,\n        "wires": [\n            [\n                "9ac12cfb.cb007"\n            ]\n        ]\n    },\n    {\n        "id": "9ac12cfb.cb007",\n        "type": "template",\n        "z": "b1c965cf.c2bff8",\n        "name": "content = Thanks for buying",\n        "field": "payload.content",\n        "fieldType": "msg",\n        "format": "handlebars",\n        "syntax": "mustache",\n        "template": "\u2714 Thank you for the purchase!",\n        "output": "str",\n        "x": 1720,\n        "y": 1460,\n        "wires": [\n            [\n                "9a7249b9.da31c8"\n            ]\n        ]\n    },\n    {\n        "id": "b8334051.0e467",\n        "type": "link out",\n        "z": "b1c965cf.c2bff8",\n        "name": "",\n        "links": [\n            "c25fc6c1.773e78"\n        ],\n        "x": 975,\n        "y": 1180,\n        "wires": []\n    },\n    {\n        "id": "d0bb09ad.e1eb58",\n        "type": "switch",\n        "z": "b1c965cf.c2bff8",\n        "name": "check status",\n        "property": "btcpayPayload.status",\n        "propertyType": "msg",\n        "rules": [\n            {\n                "t": "eq",\n                "v": "confirmed",\n                "vt": "str"\n            },\n            {\n                "t": "eq",\n                "v": "complete",\n                "vt": "str"\n            }\n        ],\n        "checkall": "false",\n        "repair": false,\n        "outputs": 2,\n        "x": 650,\n        "y": 1440,\n        "wires": [\n            [\n                "3ac2f308.51a85c"\n            ],\n            [\n                "3ac2f308.51a85c"\n            ]\n        ]\n    },\n    {\n        "id": "34b072de.bf157e",\n        "type": "sqlite",\n        "z": "b1c965cf.c2bff8",\n        "mydb": "d0934ac4.e0be88",\n        "sqlquery": "prepared",\n        "sql": "SELECT * FROM users_invoices WHERE invoice_id = $iid;",\n        "name": "Get user-invoice",\n        "x": 1240,\n        "y": 1440,\n        "wires": [\n            [\n                "8db4e8d3.f20e68"\n            ]\n        ]\n    },\n    {\n        "id": "8db4e8d3.f20e68",\n        "type": "switch",\n        "z": "b1c965cf.c2bff8",\n        "name": "Has data?",\n        "property": "payload",\n        "propertyType": "msg",\n        "rules": [\n            {\n                "t": "nempty"\n            },\n            {\n                "t": "else"\n            }\n        ],\n        "checkall": "false",\n        "repair": false,\n        "outputs": 2,\n        "x": 1450,\n        "y": 1420,\n        "wires": [\n            [\n                "a91187c.6223478",\n                "3230859b.f52cca"\n            ],\n            []\n        ],\n        "outputLabels": [\n            "Yes",\n            "No"\n        ]\n    },\n    {\n        "id": "3ac2f308.51a85c",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "Prepare data",\n        "rules": [\n            {\n                "t": "set",\n                "p": "params.$iid",\n                "pt": "msg",\n                "to": "btcpayPayload.id",\n                "tot": "msg"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 910,\n        "y": 1400,\n        "wires": [\n            [\n                "9a17925b.298ce"\n            ]\n        ]\n    },\n    {\n        "id": "9a17925b.298ce",\n        "type": "sqlite",\n        "z": "b1c965cf.c2bff8",\n        "mydb": "d0934ac4.e0be88",\n        "sqlquery": "prepared",\n        "sql": "UPDATE users_invoices SET paid = 1 WHERE invoice_id = $iid;",\n        "name": "Set paid=1 for user-invoice",\n        "x": 960,\n        "y": 1440,\n        "wires": [\n            [\n                "34b072de.bf157e"\n            ]\n        ]\n    },\n    {\n        "id": "ee53609d.1e4fb",\n        "type": "debug",\n        "z": "b1c965cf.c2bff8",\n        "name": "Output data",\n        "active": true,\n        "tosidebar": true,\n        "console": false,\n        "tostatus": false,\n        "complete": "payload",\n        "targetType": "msg",\n        "statusVal": "",\n        "statusType": "auto",\n        "x": 970,\n        "y": 280,\n        "wires": []\n    },\n    {\n        "id": "e8290f6.7e2dbf",\n        "type": "inject",\n        "z": "b1c965cf.c2bff8",\n        "name": "Get All User-Invoices",\n        "props": [\n            {\n                "p": "payload"\n            },\n            {\n                "p": "topic",\n                "vt": "str"\n            }\n        ],\n        "repeat": "",\n        "crontab": "",\n        "once": false,\n        "onceDelay": 0.1,\n        "topic": "",\n        "payload": "",\n        "payloadType": "date",\n        "x": 940,\n        "y": 180,\n        "wires": [\n            [\n                "41995b43.501d24"\n            ]\n        ]\n    },\n    {\n        "id": "41995b43.501d24",\n        "type": "sqlite",\n        "z": "b1c965cf.c2bff8",\n        "mydb": "d0934ac4.e0be88",\n        "sqlquery": "fixed",\n        "sql": "SELECT * FROM users_invoices;",\n        "name": "Get data",\n        "x": 980,\n        "y": 220,\n        "wires": [\n            [\n                "ee53609d.1e4fb"\n            ]\n        ]\n    },\n    {\n        "id": "abdce8c.4187718",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "tgPayload -> payload",\n        "rules": [\n            {\n                "t": "move",\n                "p": "tgPayload",\n                "pt": "msg",\n                "to": "payload",\n                "tot": "msg"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 2440,\n        "y": 940,\n        "wires": [\n            [\n                "940f11cc.d328b"\n            ]\n        ]\n    },\n    {\n        "id": "5a08a622.fe2448",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "payload -> btcpayPayload",\n        "rules": [\n            {\n                "t": "move",\n                "p": "payload",\n                "pt": "msg",\n                "to": "btcpayPayload",\n                "tot": "msg"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 2070,\n        "y": 1020,\n        "wires": [\n            [\n                "a3343be1.71e0e8"\n            ]\n        ]\n    },\n    {\n        "id": "8b9459b6.b69e48",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "payload -> btcpayPayload",\n        "rules": [\n            {\n                "t": "move",\n                "p": "payload",\n                "pt": "msg",\n                "to": "btcpayPayload",\n                "tot": "msg"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 2050,\n        "y": 820,\n        "wires": [\n            [\n                "be5fc001.48d2a"\n            ]\n        ]\n    },\n    {\n        "id": "74370d4b.e2fd54",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "payload -> btcpayPayload",\n        "rules": [\n            {\n                "t": "move",\n                "p": "payload",\n                "pt": "msg",\n                "to": "btcpayPayload",\n                "tot": "msg"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 430,\n        "y": 1440,\n        "wires": [\n            [\n                "d0bb09ad.e1eb58"\n            ]\n        ]\n    },\n    {\n        "id": "3230859b.f52cca",\n        "type": "function",\n        "z": "b1c965cf.c2bff8",\n        "name": "delete message",\n        "func": "msg.payload = {\\n    chatId: msg.payload[0].user_id,\\n    content: msg.payload[0].msg_id,\\n    type: \'deleteMessage\'\\n}\\n\\nreturn msg;\\n\\n",\n        "outputs": "1",\n        "noerr": 0,\n        "initialize": "",\n        "finalize": "",\n        "x": 1680,\n        "y": 1360,\n        "wires": [\n            [\n                "ede2a7eb.034408"\n            ]\n        ]\n    },\n    {\n        "id": "59b13840.137688",\n        "type": "comment",\n        "z": "b1c965cf.c2bff8",\n        "name": "IPN Handler",\n        "info": "",\n        "x": 210,\n        "y": 1360,\n        "wires": []\n    },\n    {\n        "id": "28308e88.39dd52",\n        "type": "change",\n        "z": "b1c965cf.c2bff8",\n        "name": "parse_mode = HTML",\n        "rules": [\n            {\n                "t": "set",\n                "p": "payload.options.parse_mode",\n                "pt": "msg",\n                "to": "HTML",\n                "tot": "str"\n            }\n        ],\n        "action": "",\n        "property": "",\n        "from": "",\n        "to": "",\n        "reg": false,\n        "x": 2400,\n        "y": 580,\n        "wires": [\n            [\n                "c0ee9e01.e11a8"\n            ]\n        ]\n    },\n    {\n        "id": "72f1d607.6dbf08",\n        "type": "link in",\n        "z": "b1c965cf.c2bff8",\n        "name": "",\n        "links": [\n            "3439eede.bcfc52",\n            "dac5fe08.32d83",\n            "9a7249b9.da31c8"\n        ],\n        "x": 2135,\n        "y": 580,\n        "wires": [\n            [\n                "28308e88.39dd52"\n            ]\n        ]\n    },\n    {\n        "id": "3439eede.bcfc52",\n        "type": "link out",\n        "z": "b1c965cf.c2bff8",\n        "name": "",\n        "links": [\n            "72f1d607.6dbf08"\n        ],\n        "x": 735,\n        "y": 580,\n        "wires": []\n    },\n    {\n        "id": "9a7249b9.da31c8",\n        "type": "link out",\n        "z": "b1c965cf.c2bff8",\n        "name": "",\n        "links": [\n            "72f1d607.6dbf08"\n        ],\n        "x": 1955,\n        "y": 1440,\n        "wires": []\n    },\n    {\n        "id": "6f83a984.213018",\n        "type": "comment",\n        "z": "b1c965cf.c2bff8",\n        "name": "Data management",\n        "info": "",\n        "x": 930,\n        "y": 100,\n        "wires": []\n    },\n    {\n        "id": "cf95d274.f8fb8",\n        "type": "comment",\n        "z": "b1c965cf.c2bff8",\n        "name": "App Configuration & Setup",\n        "info": "",\n        "x": 250,\n        "y": 100,\n        "wires": []\n    },\n    {\n        "id": "3120b323.3c111c",\n        "type": "comment",\n        "z": "b1c965cf.c2bff8",\n        "name": "Starts Process",\n        "info": "",\n        "x": 220,\n        "y": 500,\n        "wires": []\n    },\n    {\n        "id": "e091583c.67fb18",\n        "type": "comment",\n        "z": "b1c965cf.c2bff8",\n        "name": "Button Events",\n        "info": "",\n        "x": 210,\n        "y": 980,\n        "wires": []\n    },\n    {\n        "id": "1de04999.85b476",\n        "type": "comment",\n        "z": "b1c965cf.c2bff8",\n        "name": "Shared Sender",\n        "info": "",\n        "x": 2200,\n        "y": 500,\n        "wires": []\n    },\n    {\n        "id": "58433a7a.204b34",\n        "type": "btcpay-ipn",\n        "z": "b1c965cf.c2bff8",\n        "client": "9711e4a7.bae348",\n        "path": "/btcpay-ipn",\n        "name": "",\n        "x": 200,\n        "y": 1440,\n        "wires": [\n            [\n                "74370d4b.e2fd54"\n            ]\n        ]\n    },\n    {\n        "id": "d0934ac4.e0be88",\n        "type": "sqlitedb",\n        "z": "",\n        "db": ":memory:",\n        "mode": "RWC"\n    },\n    {\n        "id": "ac4e405.e7abcc",\n        "type": "telegram bot",\n        "z": "",\n        "botname": "Gatekeeper bot",\n        "usernames": "",\n        "chatids": "",\n        "baseapiurl": "",\n        "updatemode": "polling",\n        "pollinterval": "300",\n        "usesocks": false,\n        "sockshost": "",\n        "socksport": "6667",\n        "socksusername": "anonymous",\n        "sockspassword": "",\n        "bothost": "",\n        "localbotport": "8443",\n        "publicbotport": "8443",\n        "privatekey": "",\n        "certificate": "",\n        "useselfsignedcertificate": false,\n        "sslterminated": false,\n        "verboselogging": false\n    },\n    {\n        "id": "9711e4a7.bae348",\n        "type": "btcpay-api-config",\n        "z": "",\n        "name": ""\n    }\n]\n')))}l.isMDXComponent=!0},78:function(n,e,t){"use strict";t.d(e,"a",(function(){return d})),t.d(e,"b",(function(){return m}));var a=t(0),r=t.n(a);function c(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){c(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},c=Object.keys(n);for(a=0;a<c.length;a++)t=c[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(n);for(a=0;a<c.length;a++)t=c[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var p=r.a.createContext({}),l=function(n){var e=r.a.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},d=function(n){var e=l(n.components);return r.a.createElement(p.Provider,{value:e},n.children)},b={inlineCode:"code",wrapper:function(n){var e=n.children;return r.a.createElement(r.a.Fragment,{},e)}},f=r.a.forwardRef((function(n,e){var t=n.components,a=n.mdxType,c=n.originalType,i=n.parentName,p=s(n,["components","mdxType","originalType","parentName"]),d=l(t),f=a,m=d["".concat(i,".").concat(f)]||d[f]||b[f]||c;return t?r.a.createElement(m,o(o({ref:e},p),{},{components:t})):r.a.createElement(m,o({ref:e},p))}));function m(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var c=t.length,i=new Array(c);i[0]=f;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=n,o.mdxType="string"==typeof n?n:a,i[1]=o;for(var p=2;p<c;p++)i[p]=t[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);